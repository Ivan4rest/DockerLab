version: "3.9"

services:
    frontend:
        container_name: frontend
        restart: unless-stopped
        build:
            context: frontend
            dockerfile: Dockerfile
        ports:
            - "3002:3002"
        environment:
            SERVER_ORIGIN: http://localhost:3001
        depends_on:
            - backend

    backend:
        container_name: backend
        build:
            context: backend
            dockerfile: Dockerfile
        ports:
            - "3001:3001"
        environment:
            MYSQL_HOST: mysql_db
            JWT_SECRET_TOKEN: eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTY3NDI1MzU4MywiaWF0IjoxNjc0MjUzNTgzfQ.2daNSSAIwqRPMDdTUDLB4szoJn6x3BD4n4sM3b9vIR8
            CORS_ORIGIN_REGEX: http([s])?:\/\/localhost
        depends_on:
            - mysql_db
        healthcheck:
            test: curl --fail http://localhost:3001 || exit 1
            interval: 5s
            timeout: 30s
            retries: 15

    mysql_db: 
        container_name: mysql_db
        image: mysql:5.7
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_DATABASE=tradeoffer_db
            - MYSQL_USER=admin
            - MYSQL_PASSWORD=admin
        healthcheck:
            test: '/usr/bin/mysql --user=root --password=root --execute "SHOW DATABASES;"'
            interval: 5s
            timeout: 30s
            retries: 15
        ports:
            - "3306:3306"
        volumes:
            - mysql_db_data:/var/lib/mysql
        restart: always

    adminer:
        image: adminer:4.8.1
        container_name: adminer
        environment:
            - ADMINER_DEFAULT_SERVER=mysql_db
        restart: always
        ports:
            - 8080:8080
        depends_on:
            - mysql_db

volumes:
  mysql_db_data:
